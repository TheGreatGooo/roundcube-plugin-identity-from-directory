<?php

// identity_from_directory plugin settings
$config = [];

// Parameters for connecting to and searching in LDAP or Active Directory.
// A full example for Active Directory with the following characteristics
//
// 1. Connect to Domain Controller "dc01.contoso.com" with LDAPS on Port 636 (hosts).
//    You can specify more than one as it is an array. They will be tried one after
//    another.
// 2. Use the "roundcube-svc" user located in the OU "service-accounts" to
//    bind / connect (bind_dn) with a password (bind_pass)
// 3. Search in all organization units units below DC=contoso,DC=com (base_dn, scope)
// 4. Search only for active non-system user accounts (filter)
// 5. Search in the the directory object attributes "mail" and "sAMAccountName"
//    (search_fields) for the username of the current Roundcube username
//    ($this->rc->user->data['username'])
// 6. Define which directory object attributes to use for the Roundcube identity
//    values and signature placeholders (fieldmap, the array keys are the names of
//    the Roundcube values, the array values the corresponding directory attribute
//    names to grab the data from)
//
// would result in the following plugin config value:
//
// $config['identity_from_directory_ldap'] = array(
//   'hosts' => array('ldaps://dc01.contoso.com:636'),
//   'base_dn' => 'DC=contoso,DC=com',
//   'bind_dn' => 'CN=roundcube-svc,OU=service-accounts,DC=contoso,DC=com',
//   'bind_pass' => 'password-of-service-user-defined-in-bind_dn',
//   'scope' => 'sub', // search mode: sub|base|list
//   'filter' => '(&(sAMAccountType=805306368)(!(servicePrincipalName=*))(!(isCriticalSystemObject=TRUE))(!(userAccountControl:1.2.840.113556.1.4.803:=2)))',
//   'search_fields' => ['mail', 'sAMAccountName'],
//   'fieldmap' => array(
//     'name' => 'displayName',
//     'email' => 'mail',
//     'surname' => 'sn',
//     'firstname' => 'givenName',
//     'jobtitle' => 'title',
//     'department' => 'department',
//     'phone' => 'telephoneNumber',
//     'fax' => 'facsimileTelephoneNumber',
//     'website' => 'wWWHomePage',
//     'company' => 'organization',
//     'username' => 'sAMAccountName',
//   ),
// );
$config['identity_from_directory_ldap'] = array(
    'hosts' => array('ldaps://dc01.contoso.com:636'),
    'base_dn' => 'DC=contoso,DC=com',
    'bind_dn' => 'CN=roundcube-svc,OU=service-accounts,DC=contoso,DC=com',
    'bind_pass' => 'password-of-service-user-defined-in-bind_dn',
    'scope' => 'sub', // available search modes: sub|base|list
    'filter' => '(&(sAMAccountType=805306368)(!(servicePrincipalName=*))(!(isCriticalSystemObject=TRUE))(!(userAccountControl:1.2.840.113556.1.4.803:=2)))',
    'search_fields' => ['mail', 'sAMAccountName'],
    // fieldmap:
    // - key: value name in Roundcube
    // - values: corresponding attribute name in your LDAP
    //
    // You can use the mapped fields keys (e.g. 'foo") as placeholders in
    // $config['identity_from_directory_signature_template_plaintext'] and
    // $config['identity_from_directory_signature_template_html']). See the
    // comment there for details.
    'fieldmap' => array(
        // mandatory RC identity fields
        'name' => 'displayName',
        'email' => 'mail',
        'organization' => 'company',
        // additional data
        'surname' => 'sn',
        'firstname' => 'givenName',
        'jobtitle' => 'title',
        'department' => 'department',
        'phone' => 'telephoneNumber',
        'fax' => 'facsimileTelephoneNumber',
        'website' => 'wWWHomePage',
        'username' => 'sAMAccountName',
    ),
);


// optional fallback values which will be used if a LDAP attribute defined
// in $config['identity_from_directory_ldap']['fieldmap'] provides no / empty
// data. Just remove or add keys you do (not) need to have a fallback value for.
$config['identity_from_directory_fallback_values'] = [
    'organization' => 'ACME Inc.',
    'phone' => '+49 123 123 123',
    //'fax' => '+49 123 123 999',
    'website' => 'https://example.com/',
];


// Switch to control if unmanaged identities should be deleted.
// true: Delete all identities without a matching email address in the user's
//       LDAP dataset. Recommended for automatic housekeeping in most
//       environments after everything is working for you as expected.
// false: Do not delete identities if there is no fitting email address in
//        in LDAP. These identities will stay untouched until users delete them
//        by themselves or the identity gets updated because the email addresses
//        was added to a user's LDAP data. It makes sense to start with false
//        to prevent unwanted deletions on running systems until you are sure
//        that all identities should be defined by LDAP data, no matter what.
$config['identity_from_directory_delete_unmanaged'] = false;


// Switch for signature handling
// true: overwrite existing signatures on each login (not only name, organization,
//       email and so on).
// false: do not touch / overwrite the signature of an identity (so a user can
//        still maintain the signature value and format in a self-reliant way)
$config['identity_from_directory_update_signatures'] = true;


// Signature templates
// You can use each key from $config['identity_from_directory_ldap']['fieldmap']
// as %placeholder(_html|url)%. They will be replaced with the values from the
// either the directory or $config['identity_from_directory_fallback_values'] (if
// there is no or empty data for this value in LDAP). Each value is available in
// three ways (as provided by LDAP, with encoded HTML entities and URL encoded
// for using it in URLs).
//
// Example for 'foo':
// - %foo%: raw value of field 'foo'
// - %foo_html%: HTML entities encoded value of field 'foo'
// - %foo_url%: URL encoded value of field 'foo'
//
// $config['identity_from_directory_signature_template_plaintext'] will be used
// if $config['identity_from_directory_htmlsignature'] is false.
$config['identity_from_directory_signature_template_html'] = '
<p>
    Kind regards<br />
    <strong>%name_html%</strong><br />
    %organization_html%
</p>
<p>
    mailto: <a href="mailto:%email_html%">%email_html%</a><br />
    phone: <a href="tel:%phone_url%">%phone_html%</a><br />
    web: <a href="%website_html%">%website_html%</a>
</p>
';

$config['identity_from_directory_signature_template_plaintext'] = '
Kind regards
%name%
%organization%

mailto: %email%
phone: %phone%
web: %website%
';


// Active Directory only: Also search the 'proxyAddresses' field for email
// alias addresses? This is an Actice Directory user attribute which may
// contain a CSV string like 'smtp:foo@exmaple.com,smtp:bar@example.net' with
// alias email addresses (if any). The plugin will also maintain identities
// for them if the following config value is set to true.
$config['identity_from_directory_handle_proxyaddresses'] = false;


// Switch for signature format
// true: use HTML instead of plain text signatures
$config['identity_from_directory_htmlsignature'] = true;


// Switch for signature sanitation
// true: use rcmail_action_settings_index::wash_html() on HTML signatures.
// You can disable this if you got problems with stripped HTML attributes
// and you are sure that one you trust the LDAP data.
$config['identity_from_directory_washhtmlsignature'] = true;


// Switch to overwrite the directory value for the %email_(_html|url)%
// placeholders in signature templates with the email address from the identity
//
// true:
//
// false: Use the value returned from the directory defined in the field
// $config['identity_from_directory_ldap']['fieldmap']['email'] in every case.
// This means the %email_(_html|url)% placeholder in a signature template will
// always be replaced with the same directory based value for all signatures
// of all identities of the user.
$config['identity_from_directory_ignore_emailfieldmap_placeholder'] = true;


// In case of errors: Write LDAP search info, records and other useful
// debugging information into the Roundcube log "identity_from_directory_ldap".
// You might want to set $config['ldap_debug'] = true for logging Roundcube's
// LDAP conversations, including the ones triggered by this plugin.
$config['identity_from_directory_debug'] = false;
